# Leetcode : 206 Reverse Linked List
# Definition for singly-linked list.
# class ListNode:
#     def _init_(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    #Approach
    #1. take 3 pointers curr, temp, prev
    #2. temp for next and prev for 1 before curr
    #3. point curr.next -> prev
    #4. move prev curr ahed
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        #print(head)
        curr = head
        prev = None
        while curr:
            temp = curr.next
            curr.next = prev
            prev = curr
            curr = temp
        print(head)
        head = prev
        return head
